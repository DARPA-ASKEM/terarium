---
services:
  keycloak:
    container_name: keycloak
    image: keycloak/keycloak:26.1
    networks:
      - terarium
    ports:
      - "8081:8081"
      - "9000:9000"
    restart: always
    healthcheck:
      test: "{ printf >&3 'GET /realms/terarium/.well-known/openid-configuration HTTP/1.0\r\nHost: localhost\r\n\r\n'; cat <&3; } 3<>/dev/tcp/localhost/8081 | head -1 | grep 200"
      interval: 3s
      timeout: 3s
      retries: 30
      start_period: 20s
    command: [ 'start-dev', '--http-port=8081' ]
    environment:
      KC_BOOTSTRAP_ADMIN_PASSWORD: 'admin123'
      KC_BOOTSTRAP_ADMIN_USERNAME: 'admin'
      KC_DB: 'postgres'
      KC_DB_PASSWORD: 'postgres'
      KC_DB_URL: 'jdbc:postgresql://postgres/postgres'
      KC_DB_URL_HOST: 'postgres'
      KC_DB_USERNAME: 'postgres'
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_HOSTNAME: 'http://keycloak:8081'
      KC_HOSTNAME_ADMIN: 'http://keycloak:8081'
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_PROXY_HEADERS: 'xforwarded'
    depends_on:
      keycloak-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    volumes:
      - ./realm/:/data/
    extra_hosts:
      - "${local_host_name}:host-gateway"

  keycloak-init:
    container_name: keycloak-init
    image: keycloak/keycloak:26.1
    networks:
      - terarium
    command: [ 'import', '--dir', '/data', '--override', 'true' ]
    volumes:
      - ./realm:/data
    environment:
      KC_DB: 'postgres'
      KC_DB_URL: 'jdbc:postgresql://postgres/postgres'
      KC_DB_USERNAME: 'postgres'
      KC_DB_PASSWORD: 'postgres'
      KC_PROXY_HEADERS: 'xforwarded'
      KC_BOOTSTRAP_ADMIN_USERNAME: 'admin'
      KC_BOOTSTRAP_ADMIN_PASSWORD: 'admin123'
      KC_HOSTNAME: 'keycloak'
      KC_HOSTNAME_PORT: '8081'
      KC_HOSTNAME_ADMIN_URL: 'http://keycloak:8081'
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
    depends_on:
      postgres:
        condition: service_healthy
