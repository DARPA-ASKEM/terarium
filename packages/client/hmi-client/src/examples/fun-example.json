{
    "id": "b75cf548-8579-4b00-8db2-370d80497ad6",
    "model": {
      "petrinet": {
        "header": {
          "name": "SIR Model",
          "schema": "https://raw.githubusercontent.com/DARPA-ASKEM/Model-Representations/petrinet_v0.6/petrinet/petrinet_schema.json",
          "schema_name": "petrinet",
          "description": "SIR model",
          "model_version": "0.1"
        },
        "model": {
          "states": [
            {
              "id": "S",
              "name": "Susceptible",
              "description": "Number of individuals that are 'susceptible' to a disease infection",
              "grounding": {
                "identifiers": {
                  "ido": "0000514"
                }
              },
              "units": {
                "expression": "person",
                "expression_mathml": "<ci>person</ci>"
              }
            },
            {
              "id": "I",
              "name": "Infected",
              "description": "Number of individuals that are 'infected' by a disease",
              "grounding": {
                "identifiers": {
                  "ido": "0000511"
                }
              },
              "units": {
                "expression": "person",
                "expression_mathml": "<ci>person</ci>"
              }
            },
            {
              "id": "R",
              "name": "Recovered",
              "description": "Number of individuals that have 'recovered' from a disease infection",
              "grounding": {
                "identifiers": {
                  "ido": "0000592"
                }
              },
              "units": {
                "expression": "person",
                "expression_mathml": "<ci>person</ci>"
              }
            }
          ],
          "transitions": [
            {
              "id": "inf",
              "input": [
                "S",
                "I"
              ],
              "output": [
                "I",
                "I"
              ],
              "properties": {
                "name": "Infection",
                "description": "Infective process between individuals"
              }
            },
            {
              "id": "rec",
              "input": [
                "I"
              ],
              "output": [
                "R"
              ],
              "properties": {
                "name": "Recovery",
                "description": "Recovery process of a infected individual"
              }
            }
          ]
        },
        "semantics": {
          "ode": {
            "rates": [
              {
                "target": "inf",
                "expression": "S*I*beta",
                "expression_mathml": "<apply><times/><ci>S</ci><ci>I</ci><ci>beta</ci></apply>"
              },
              {
                "target": "rec",
                "expression": "I*gamma",
                "expression_mathml": "<apply><times/><ci>I</ci><ci>gamma</ci></apply>"
              }
            ],
            "initials": [
              {
                "target": "S",
                "expression": "S0",
                "expression_mathml": "<ci>S0</ci>"
              },
              {
                "target": "I",
                "expression": "I0",
                "expression_mathml": "<ci>I0</ci>"
              },
              {
                "target": "R",
                "expression": "R0",
                "expression_mathml": "<ci>R0</ci>"
              }
            ],
            "parameters": [
              {
                "id": "beta",
                "name": "\u03b2",
                "description": "infection rate",
                "value": 2.7e-07,
                "distribution": {
                  "type": "Uniform1",
                  "parameters": {
                    "minimum": 2.6e-07,
                    "maximum": 2.8e-07
                  }
                },
                "units": {
                  "expression": "1/(person*day)",
                  "expression_mathml": "<apply><divide/><cn>1</cn><apply><times/><ci>person</ci><ci>day</ci></apply></apply>"
                }
              },
              {
                "id": "gamma",
                "name": "\u03b3",
                "description": "recovery rate",
                "value": 0.14,
                "grounding": {
                  "identifiers": {
                    "askemo": "0000013"
                  }
                },
                "distribution": {
                  "type": "Uniform1",
                  "parameters": {
                    "minimum": 0.1,
                    "maximum": 0.18
                  }
                },
                "units": {
                  "expression": "1/day",
                  "expression_mathml": "<apply><divide/><cn>1</cn><ci>day</ci></apply>"
                }
              },
              {
                "id": "S0",
                "name": "S\u2080",
                "description": "Total susceptible population at timestep 0",
                "value": 1000.0
              },
              {
                "id": "I0",
                "name": "I\u2080",
                "description": "Total infected population at timestep 0",
                "value": 1.0
              },
              {
                "id": "R0",
                "name": "R\u2080",
                "description": "Total recovered population at timestep 0",
                "value": 0.0
              }
            ],
            "time": {
              "id": "t",
              "units": {
                "expression": "day",
                "expression_mathml": "<ci>day</ci>"
              }
            }
          }
        },
        "metadata": {
          "attributes": [
            {
              "type": "anchored_extraction",
              "payload": {
                "id": {
                  "id": "R:190348269"
                },
                "names": [
                  {
                    "id": {
                      "id": "T:-1709799622"
                    },
                    "name": "Bucky",
                    "extraction_source": {
                      "page": 0,
                      "block": 0,
                      "char_start": 738,
                      "char_end": 743,
                      "document_reference": {
                        "id": "buckymodel_webdocs.pdf"
                      }
                    },
                    "provenance": {
                      "method": "TR Pipeline rules",
                      "timestamp": "2023-06-15T22:59:11.974474"
                    }
                  }
                ],
                "descriptions": [
                  {
                    "id": {
                      "id": "T:-486841659"
                    },
                    "source": "time",
                    "grounding": [
                      {
                        "grounding_text": "time since time scale zero",
                        "grounding_id": "apollosv:00000272",
                        "source": [

                        ],
                        "score": 0.8945620059967041,
                        "provenance": {
                          "method": "TR-Embedding",
                          "timestamp": "2023-06-15T22:59:11.974644"
                        }
                      }
                    ],
                    "extraction_source": {
                      "page": 0,
                      "block": 0,
                      "char_start": 732,
                      "char_end": 736,
                      "document_reference": {
                        "id": "buckymodel_webdocs.pdf"
                      }
                    },
                    "provenance": {
                      "method": "TR Pipeline rules",
                      "timestamp": "2023-06-15T22:59:11.974474"
                    }
                  }
                ],
                "value_specs": [

                ],
                "groundings": [

                ]
              }
            },
            {
              "type": "anchored_extraction",
              "payload": {
                "id": {
                  "id": "R:159895595"
                },
                "names": [
                  {
                    "id": {
                      "id": "T:2131207786"
                    },
                    "name": "SEIR",
                    "extraction_source": {
                      "page": 0,
                      "block": 0,
                      "char_start": 56,
                      "char_end": 60,
                      "document_reference": {
                        "id": "buckymodel_webdocs.pdf"
                      }
                    },
                    "provenance": {
                      "method": "TR Pipeline rules",
                      "timestamp": "2023-06-15T22:59:11.974780"
                    }
                  }
                ],
                "descriptions": [
                  {
                    "id": {
                      "id": "T:-1520869470"
                    },
                    "source": "spatially distributed",
                    "grounding": [

                    ],
                    "extraction_source": {
                      "page": 0,
                      "block": 0,
                      "char_start": 34,
                      "char_end": 55,
                      "document_reference": {
                        "id": "buckymodel_webdocs.pdf"
                      }
                    },
                    "provenance": {
                      "method": "TR Pipeline rules",
                      "timestamp": "2023-06-15T22:59:11.974780"
                    }
                  }
                ],
                "value_specs": [

                ],
                "groundings": [

                ]
              }
            },
            {
              "type": "anchored_extraction",
              "payload": {
                "id": {
                  "id": "E:-337831219"
                },
                "names": [
                  {
                    "id": {
                      "id": "T:1326919589"
                    },
                    "name": "S",
                    "extraction_source": {
                      "page": 0,
                      "block": 0,
                      "char_start": 562,
                      "char_end": 563,
                      "document_reference": {
                        "id": "buckymodel_webdocs.pdf"
                      }
                    },
                    "provenance": {
                      "method": "TR Pipeline rules",
                      "timestamp": "2023-06-15T22:59:11.974931"
                    }
                  }
                ],
                "descriptions": [
                  {
                    "id": {
                      "id": "T:1687413640"
                    },
                    "source": "fraction of the population",
                    "grounding": [
                      {
                        "grounding_text": "count of simulated population",
                        "grounding_id": "apollosv:00000022",
                        "source": [

                        ],
                        "score": 0.8330355286598206,
                        "provenance": {
                          "method": "TR-Embedding",
                          "timestamp": "2023-06-15T22:59:11.975009"
                        }
                      }
                    ],
                    "extraction_source": {
                      "page": 0,
                      "block": 0,
                      "char_start": 570,
                      "char_end": 596,
                      "document_reference": {
                        "id": "buckymodel_webdocs.pdf"
                      }
                    },
                    "provenance": {
                      "method": "TR Pipeline rules",
                      "timestamp": "2023-06-15T22:59:11.974931"
                    }
                  }
                ],
                "value_specs": [

                ],
                "groundings": [
                  {
                    "grounding_text": "Meruvax I",
                    "grounding_id": "vo:0003109",
                    "source": [

                    ],
                    "score": 0.7847759127616882,
                    "provenance": {
                      "method": "TR-Embedding",
                      "timestamp": "2023-06-15T22:59:11.974960"
                    }
                  }
                ]
              }
            },
            {
              "type": "anchored_extraction",
              "payload": {
                "id": {
                  "id": "E:-1921441554"
                },
                "names": [
                  {
                    "id": {
                      "id": "T:-24678027"
                    },
                    "name": "asym frac",
                    "extraction_source": {
                      "page": 0,
                      "block": 0,
                      "char_start": 142,
                      "char_end": 151,
                      "document_reference": {
                        "id": "buckymodel_webdocs.pdf"
                      }
                    },
                    "provenance": {
                      "method": "TR Pipeline rules",
                      "timestamp": "2023-06-15T22:59:11.975127"
                    }
                  },
                  {
                    "id": {
                      "id": "v10"
                    },
                    "name": "\u03b1",
                    "extraction_source": null,
                    "provenance": {
                      "method": "extractor V1.0 - text, dataset, formula annotation",
                      "timestamp": "2023-06-15T22:59:13.177022"
                    }
                  }
                ],
                "descriptions": [
                  {
                    "id": {
                      "id": "T:1244663286"
                    },
                    "source": "percentage of infections",
                    "grounding": [
                      {
                        "grounding_text": "percentage of cases",
                        "grounding_id": "cemo:percentage_of_cases",
                        "source": [

                        ],
                        "score": 0.8812347650527954,
                        "provenance": {
                          "method": "TR-Embedding",
                          "timestamp": "2023-06-15T22:59:11.975201"
                        }
                      }
                    ],
                    "extraction_source": {
                      "page": 0,
                      "block": 0,
                      "char_start": 94,
                      "char_end": 118,
                      "document_reference": {
                        "id": "buckymodel_webdocs.pdf"
                      }
                    },
                    "provenance": {
                      "method": "TR Pipeline rules",
                      "timestamp": "2023-06-15T22:59:11.975127"
                    }
                  },
                  {
                    "id": {
                      "id": "v10"
                    },
                    "source": " Rate of infections that are asymptomatic",
                    "grounding": null,
                    "extraction_source": null,
                    "provenance": {
                      "method": "extractor V1.0 - text, dataset, formula annotation",
                      "timestamp": "2023-06-15T22:59:13.177022"
                    }
                  }
                ],
                "value_specs": [

                ],
                "groundings": [
                  {
                    "grounding_text": "Van",
                    "grounding_id": "geonames:298117",
                    "source": [

                    ],
                    "score": 1.0,
                    "provenance": {
                      "method": "extractor V1.0 - text, dataset, formula annotation",
                      "timestamp": "2023-06-15T22:59:13.177022"
                    }
                  },
                  {
                    "grounding_text": "Sanaa",
                    "grounding_id": "geonames:71137",
                    "source": [

                    ],
                    "score": 1.0,
                    "provenance": {
                      "method": "extractor V1.0 - text, dataset, formula annotation",
                      "timestamp": "2023-06-15T22:59:13.177022"
                    }
                  }
                ]
              }
            },
            {
              "type": "anchored_extraction",
              "payload": {
                "id": {
                  "id": "E:392549189"
                },
                "names": [
                  {
                    "id": {
                      "id": "T:-24678027"
                    },
                    "name": "asym frac",
                    "extraction_source": {
                      "page": 0,
                      "block": 0,
                      "char_start": 142,
                      "char_end": 151,
                      "document_reference": {
                        "id": "buckymodel_webdocs.pdf"
                      }
                    },
                    "provenance": {
                      "method": "TR Pipeline rules",
                      "timestamp": "2023-06-15T22:59:11.975270"
                    }
                  },
                  {
                    "id": {
                      "id": "v18"
                    },
                    "name": "asym_frac",
                    "extraction_source": null,
                    "provenance": {
                      "method": "extractor V1.0 - text, dataset, formula annotation",
                      "timestamp": "2023-06-15T22:59:13.177022"
                    }
                  }
                ],
                "descriptions": [
                  {
                    "id": {
                      "id": "T:1244663286"
                    },
                    "source": "percentage of infections",
                    "grounding": [
                      {
                        "grounding_text": "percentage of cases",
                        "grounding_id": "cemo:percentage_of_cases",
                        "source": [

                        ],
                        "score": 0.8812347650527954,
                        "provenance": {
                          "method": "TR-Embedding",
                          "timestamp": "2023-06-15T22:59:11.975340"
                        }
                      }
                    ],
                    "extraction_source": {
                      "page": 0,
                      "block": 0,
                      "char_start": 94,
                      "char_end": 118,
                      "document_reference": {
                        "id": "buckymodel_webdocs.pdf"
                      }
                    },
                    "provenance": {
                      "method": "TR Pipeline rules",
                      "timestamp": "2023-06-15T22:59:11.975270"
                    }
                  },
                  {
                    "id": {
                      "id": "v18"
                    },
                    "source": " Fraction of infections that are asymptomatic",
                    "grounding": null,
                    "extraction_source": null,
                    "provenance": {
                      "method": "extractor V1.0 - text, dataset, formula annotation",
                      "timestamp": "2023-06-15T22:59:13.177022"
                    }
                  }
                ],
                "value_specs": [

                ],
                "groundings": [

                ]
              }
            },
            {
              "type": "anchored_extraction",
              "payload": {
                "id": {
                  "id": "E:-1790112729"
                },
                "names": [
                  {
                    "id": {
                      "id": "T:-24678027"
                    },
                    "name": "asym frac",
                    "extraction_source": {
                      "page": 0,
                      "block": 0,
                      "char_start": 142,
                      "char_end": 151,
                      "document_reference": {
                        "id": "buckymodel_webdocs.pdf"
                      }
                    },
                    "provenance": {
                      "method": "TR Pipeline rules",
                      "timestamp": "2023-06-15T22:59:11.975409"
                    }
                  }
                ],
                "descriptions": [
                  {
                    "id": {
                      "id": "T:1244663286"
                    },
                    "source": "percentage of infections",
                    "grounding": [
                      {
                        "grounding_text": "percentage of cases",
                        "grounding_id": "cemo:percentage_of_cases",
                        "source": [

                        ],
                        "score": 0.8812347650527954,
                        "provenance": {
                          "method": "TR-Embedding",
                          "timestamp": "2023-06-15T22:59:11.975479"
                        }
                      }
                    ],
                    "extraction_source": {
                      "page": 0,
                      "block": 0,
                      "char_start": 94,
                      "char_end": 118,
                      "document_reference": {
                        "id": "buckymodel_webdocs.pdf"
                      }
                    },
                    "provenance": {
                      "method": "TR Pipeline rules",
                      "timestamp": "2023-06-15T22:59:11.975409"
                    }
                  }
                ],
                "value_specs": [

                ],
                "groundings": [

                ]
              }
            }
          ]
        }
      }
    },
    "progress": {
      "progress": 1.0,
      "coverage_of_search_space": 2.1984847907347774e-308
    },
    "request": {
      "constraints": [
        {
          "name": "I_bound",
          "timepoints": {
            "lb": 0.0,
            "ub": 9.0,
            "closed_upper_bound": true
          },
          "variable": "I",
          "interval": {
            "lb": 0.0,
            "ub": 0.1
          }
        }
      ],
      "parameters": [
        {
          "name": "beta",
          "interval": {
            "lb": 0.01,
            "ub": 0.5
          },
          "label": "all"
        },
        {
          "name": "gamma",
          "interval": {
            "lb": 0.01,
            "ub": 0.5
          },
          "label": "all"
        },
        {
          "name": "S0",
          "interval": {
            "lb": 0.99,
            "ub": 0.99,
            "closed_upper_bound": true
          }
        },
        {
          "name": "I0",
          "interval": {
            "lb": 0.01,
            "ub": 0.01,
            "closed_upper_bound": true
          }
        },
        {
          "name": "R0",
          "interval": {
            "lb": 0.0,
            "ub": 0.0,
            "closed_upper_bound": true
          }
        }
      ],
      "config": {
        "tolerance": 0.1,
        "normalization_constant": 1.0,
        "use_compartmental_constraints": true
      },
      "structure_parameters": [
        {
          "name": "schedules",
          "schedules": [
            {
              "timepoints": [
                0,
                1,
                2,
                3,
                4,
                6,
                8,
                10
              ]
            }
          ]
        }
      ]
    },
    "done": true,
    "parameter_space": {
      "num_dimensions": 6,
      "true_boxes": [
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.01,
              "ub": 0.29975842623881493
            },
            "gamma": {
              "lb": 0.01,
              "ub": 0.5
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 6.0,
              "ub": 6.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & (((R_4 + I_4) + S_4) <= 10000100000000001/10000000000000000)) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000)) & disj31) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & (beta < 14987921311940747/50000000000000000)) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (((R_4 + I_4) + S_4) <= 10000100000000001/10000000000000000))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (beta < 14987921311940747/50000000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj31))) & ((conj46 | (I_8 < 0.0)) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj46))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.10730890301136431,
                "gamma": 0.16377588188857223,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 1.0,
                "R_0": 0.0,
                "I_1": 0.009424599320926786,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9889376418601875,
                "R_1": 0.0016377588188857223,
                "timer_t_1": 1.0,
                "I_2": 0.008881232801715152,
                "assume_I_bound_2": 1.0,
                "S_2": 0.987937481536178,
                "R_2": 0.0031812856621069455,
                "timer_t_2": 2.0,
                "I_3": 0.008368240352409326,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9869959316805026,
                "R_3": 0.004635827967088191,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9861096048958692,
                "R_4": 0.006006361577064102,
                "timer_t_4": 4.0,
                "I_4": 0.007884033527066788,
                "S_6": 0.9844410016076218,
                "R_6": 0.008588843525834094,
                "timer_t_6": 6.0,
                "I_6": 0.006970154866544207,
                "assume_I_bound_6": 1.0,
                "I_8": 0.0061597124142615395,
                "assume_I_bound_8": 1.0,
                "S_8": 0.9829682610962395,
                "R_8": 0.010872026489499054,
                "timer_t_8": 8.0,
                "timestep": 6.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.01,
              "ub": 0.29975842623881493
            },
            "gamma": {
              "lb": 0.01,
              "ub": 0.5
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 7.0,
              "ub": 7.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & (((R_4 + I_4) + S_4) <= 10000100000000001/10000000000000000)) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000)) & disj31) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & (beta < 14987921311940747/50000000000000000)) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (((R_4 + I_4) + S_4) <= 10000100000000001/10000000000000000))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (beta < 14987921311940747/50000000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj31))) & ((conj46 | (I_8 < 0.0)) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj46))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.06754300937877226,
                "gamma": 0.16377588188857223,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 0.0,
                "R_0": 0.0,
                "I_1": 0.009030916973964125,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9893313242071502,
                "R_1": 0.0016377588188857223,
                "timer_t_1": 1.0,
                "I_2": 0.008155338237025885,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9887278517744249,
                "R_2": 0.0031168099885491725,
                "timer_t_2": 2.0,
                "I_3": 0.007364317444634685,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9881832146601981,
                "R_3": 0.004452467895167147,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9876916679262513,
                "R_4": 0.00565858192118454,
                "timer_t_4": 4.0,
                "I_4": 0.006649750152564194,
                "S_6": 0.9868043888897406,
                "R_6": 0.007836766815141642,
                "timer_t_6": 6.0,
                "I_6": 0.005358844295117687,
                "assume_I_bound_6": 1.0,
                "I_8": 0.004317897446616378,
                "assume_I_bound_8": 1.0,
                "S_8": 0.9860899547243913,
                "R_8": 0.00959214782899231,
                "timer_t_8": 8.0,
                "S_10": 0.9855146511951999,
                "I_10": 0.0034787358464400575,
                "R_10": 0.01100661295836013,
                "timer_t_10": 10.0,
                "timestep": 7.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.29975842623881493,
              "ub": 0.36841799127734187
            },
            "gamma": {
              "lb": 0.01,
              "ub": 0.09563828590831737
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 6.0,
              "ub": 6.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & (gamma < 9563828590831737/100000000000000000)) & (beta < 9210449781933547/25000000000000000)) & disj52) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (beta < 14987921311940747/50000000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (gamma < 9563828590831737/100000000000000000))) | (! (beta < 9210449781933547/25000000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj52))) & (((I_8 < 0.0) | conj100) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj100))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (beta < 14987921311940747/50000000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.3228162093785879,
                "gamma": 0.03687572028362692,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 1.0,
                "R_0": 0.0,
                "I_1": 0.012827123270011752,
                "assume_I_bound_1": 1.0,
                "S_1": 0.986804119527152,
                "R_1": 0.0003687572028362692,
                "timer_t_1": 1.0,
                "I_2": 0.016440275608673387,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9827179530007518,
                "R_2": 0.0008417713905748244,
                "timer_t_2": 2.0,
                "I_3": 0.02104949700821398,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9775024719914525,
                "R_3": 0.0014480310003336316,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9708602013521382,
                "R_4": 0.0022242712960288194,
                "timer_t_4": 4.0,
                "I_4": 0.02691552735183294,
                "S_6": 0.9539889524145433,
                "R_6": 0.00420941783966839,
                "timer_t_6": 6.0,
                "I_6": 0.04180162974578838,
                "assume_I_bound_6": 1.0,
                "I_8": 0.0644654329846135,
                "assume_I_bound_8": 1.0,
                "S_8": 0.9282420178353582,
                "R_8": 0.007292549180028274,
                "timer_t_8": 8.0,
                "S_10": 0.3228162093785879,
                "I_10": 0.3228162093785879,
                "R_10": 0.3228162093785879,
                "timer_t_10": 0.3228162093785879,
                "timestep": 6.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.29975842623881493,
              "ub": 0.36841799127734187
            },
            "gamma": {
              "lb": 0.01,
              "ub": 0.09563828590831737
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 7.0,
              "ub": 7.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & disj52) & (beta < 5816727577985343/12500000000000000)) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (beta < 2599163341680227/6250000000000000)) | (gamma < 21412277890169543/50000000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (beta < 5816727577985343/12500000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj52))) & (((I_8 < 0.0) | conj100) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj100))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (beta < 2599163341680227/6250000000000000))) & (! (gamma < 21412277890169543/50000000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.3133935016574609,
                "gamma": 0.03687572028362692,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 0.0,
                "R_0": 0.0,
                "I_1": 0.012733838463572594,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9868974043335912,
                "R_1": 0.0003687572028362692,
                "timer_t_1": 1.0,
                "I_2": 0.016202682648693192,
                "assume_I_bound_2": 1.0,
                "S_2": 0.982958985905161,
                "R_2": 0.0008383314461458618,
                "timer_t_2": 2.0,
                "I_3": 0.020596481392969324,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9779676890515189,
                "R_3": 0.0014358295555118733,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9716550750522449,
                "R_4": 0.0021953642247174543,
                "timer_t_4": 4.0,
                "I_4": 0.026149560723037625,
                "S_6": 0.9557293615618657,
                "R_6": 0.004124017796222491,
                "timer_t_6": 6.0,
                "I_6": 0.04014662064191185,
                "assume_I_bound_6": 1.0,
                "I_8": 0.06123514408108598,
                "assume_I_bound_8": 1.0,
                "S_8": 0.9316797722346943,
                "R_8": 0.007085083684219651,
                "timer_t_8": 8.0,
                "S_10": 0.8961825331455013,
                "I_10": 0.09243466232466198,
                "R_10": 0.011601668322366171,
                "timer_t_10": 10.0,
                "timestep": 7.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.36841799127734187,
              "ub": 0.3866535916235616
            },
            "gamma": {
              "lb": 0.02627189456321497,
              "ub": 0.09563828590831737
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 6.0,
              "ub": 6.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & (gamma < 9563828590831737/100000000000000000)) & (beta < 38665359162356161/100000000000000000)) & disj90) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (beta < 9210449781933547/25000000000000000)) | (gamma < 6567973640803743/250000000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (gamma < 9563828590831737/100000000000000000))) | (! (beta < 38665359162356161/100000000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj90))) & (((I_8 < 0.0) | conj198) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj198))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (beta < 9210449781933547/25000000000000000))) & (! (gamma < 6567973640803743/250000000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.37784069899846895,
                "gamma": 0.03687572028362692,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 1.0,
                "R_0": 0.0,
                "I_1": 0.013371865717248573,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9862593770799152,
                "R_1": 0.0003687572028362692,
                "timer_t_1": 1.0,
                "I_2": 0.017861780005519565,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9812763608337947,
                "R_2": 0.0008618591606857478,
                "timer_t_2": 2.0,
                "I_3": 0.023825657374004883,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9746538043382993,
                "R_3": 0.0015205382876957421,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9658796480089943,
                "R_4": 0.0023991535845836434,
                "timer_t_4": 4.0,
                "I_4": 0.031721198406422006,
                "S_6": 0.942726329001699,
                "R_6": 0.004738736485818058,
                "timer_t_6": 6.0,
                "I_6": 0.05253493451248293,
                "assume_I_bound_6": 1.0,
                "I_8": 0.37784069899846895,
                "assume_I_bound_8": 1.0,
                "S_8": 0.37784069899846895,
                "R_8": 0.37784069899846895,
                "timer_t_8": 0.37784069899846895,
                "S_10": 0.37784069899846895,
                "I_10": 0.37784069899846895,
                "R_10": 0.37784069899846895,
                "timer_t_10": 0.37784069899846895,
                "timestep": 6.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.36841799127734187,
              "ub": 0.3866535916235616
            },
            "gamma": {
              "lb": 0.02627189456321497,
              "ub": 0.09563828590831737
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 7.0,
              "ub": 7.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & (((R_4 + I_4) + S_4) <= 10000100000000001/10000000000000000)) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000)) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6))))) & (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000)) & (gamma < 8536169013232871/50000000000000000)) & (beta < 47697236927080811/100000000000000000)) & disj97) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (S_8 < 0.0)) | (beta < 5779888716424507/12500000000000000)) | (gamma < 2043857093996161/20000000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (((R_4 + I_4) + S_4) <= 10000100000000001/10000000000000000))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6)))))) | (! (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000))) | (! (gamma < 8536169013232871/50000000000000000))) | (! (beta < 47697236927080811/100000000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj97))) & (((I_8 < 0.0) | conj215) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj215))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (S_8 < 0.0))) & (! (beta < 5779888716424507/12500000000000000))) & (! (gamma < 2043857093996161/20000000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.372039391819065,
                "gamma": 0.04804103334386996,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 0.0,
                "R_0": 0.0,
                "I_1": 0.013202779645570045,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9863168100209913,
                "R_1": 0.0004804103334386996,
                "timer_t_1": 1.0,
                "I_2": 0.017413247360396795,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9814720623509899,
                "R_2": 0.0011146902886132975,
                "timer_t_2": 2.0,
                "I_3": 0.022935079302637728,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9751136669426014,
                "R_3": 0.0019512537547609241,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9667932357421678,
                "R_4": 0.003053105464809974,
                "timer_t_4": 4.0,
                "I_4": 0.030153658793022346,
                "S_6": 0.945101487060972,
                "R_6": 0.0059504289704501575,
                "timer_t_6": 6.0,
                "I_6": 0.04894808396857795,
                "assume_I_bound_6": 1.0,
                "I_8": 0.0788759147977313,
                "assume_I_bound_8": 1.0,
                "S_8": 0.9106261920014476,
                "R_8": 0.010653697686091573,
                "timer_t_8": 8.0,
                "S_10": 0.8574557843984009,
                "I_10": 0.12446740002997222,
                "R_10": 0.018232530227885936,
                "timer_t_10": 10.0,
                "timestep": 7.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.3959302360872824,
              "ub": 0.40767596053818733
            },
            "gamma": {
              "lb": 0.04081849594511856,
              "ub": 0.09563828590831737
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 6.0,
              "ub": 6.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000)) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6))))) & (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000)) & (gamma < 9563828590831737/100000000000000000)) & (beta < 20383798026909367/50000000000000000)) & disj90) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (S_8 < 0.0)) | (beta < 494912795109103/1250000000000000)) | (gamma < 10204623986279641/250000000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6)))))) | (! (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000))) | (! (gamma < 9563828590831737/100000000000000000))) | (! (beta < 20383798026909367/50000000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj90))) & (((I_8 < 0.0) | conj198) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj198))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (S_8 < 0.0))) & (! (beta < 494912795109103/1250000000000000))) & (! (gamma < 10204623986279641/250000000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.3998892981720107,
                "gamma": 0.05413630196217461,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 1.0,
                "R_0": 0.0,
                "I_1": 0.01341754103228116,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9860410959480971,
                "R_1": 0.0005413630196217461,
                "timer_t_1": 1.0,
                "I_2": 0.017981799096728174,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9807504570527467,
                "R_2": 0.001267743850525187,
                "timer_t_2": 2.0,
                "I_3": 0.024060641807329874,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9736981329048847,
                "R_3": 0.00224122528778548,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9643295772537884,
                "R_4": 0.003543807345169137,
                "timer_t_4": 4.0,
                "I_4": 0.032126615401042474,
                "S_6": 0.939551812217353,
                "R_6": 0.007022343290847742,
                "timer_t_6": 6.0,
                "I_6": 0.05342584449179935,
                "assume_I_bound_6": 1.0,
                "I_8": 0.08807776698979906,
                "assume_I_bound_8": 1.0,
                "S_8": 0.8992809348005483,
                "R_8": 0.012807155721881692,
                "timer_t_8": 8.0,
                "S_10": 0.3998892981720107,
                "I_10": 0.3998892981720107,
                "R_10": 0.3998892981720107,
                "timer_t_10": 0.3998892981720107,
                "timestep": 6.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.3959302360872824,
              "ub": 0.40767596053818733
            },
            "gamma": {
              "lb": 0.04081849594511856,
              "ub": 0.09563828590831737
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 7.0,
              "ub": 7.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & (((R_4 + I_4) + S_4) <= 10000100000000001/10000000000000000)) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000)) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6))))) & (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000)) & (gamma < 8536169013232871/50000000000000000)) & (beta < 47697236927080811/100000000000000000)) & disj97) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (S_8 < 0.0)) | (beta < 5779888716424507/12500000000000000)) | (gamma < 2043857093996161/20000000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (((R_4 + I_4) + S_4) <= 10000100000000001/10000000000000000))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6)))))) | (! (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000))) | (! (gamma < 8536169013232871/50000000000000000))) | (! (beta < 47697236927080811/100000000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj97))) & (((I_8 < 0.0) | conj215) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj215))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (S_8 < 0.0))) & (! (beta < 5779888716424507/12500000000000000))) & (! (gamma < 2043857093996161/20000000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.39826281478399944,
                "gamma": 0.05802249910131692,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 0.0,
                "R_0": 0.0,
                "I_1": 0.013362576875348427,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9860571981336385,
                "R_1": 0.0005802249910131692,
                "timer_t_1": 1.0,
                "I_2": 0.017834863187053258,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9808095769392023,
                "R_2": 0.0013555598737443515,
                "timer_t_2": 2.0,
                "I_3": 0.0237666938476537,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9738429096291482,
                "R_3": 0.0023903965231981076,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.964625078033046,
                "R_4": 0.003769427320941073,
                "timer_t_4": 4.0,
                "I_4": 0.031605494646012894,
                "S_6": 0.9403409330573731,
                "R_6": 0.007437190200459202,
                "timer_t_6": 6.0,
                "I_6": 0.052221876742167744,
                "assume_I_bound_6": 1.0,
                "I_8": 0.08553577221313996,
                "assume_I_bound_8": 1.0,
                "S_8": 0.9011388033593052,
                "R_8": 0.01349753378546013,
                "timer_t_8": 8.0,
                "S_10": 0.8400369387309158,
                "I_10": 0.13671122302423108,
                "R_10": 0.023423805150703237,
                "timer_t_10": 10.0,
                "timestep": 7.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.29975842623881493,
              "ub": 0.4158661346688363
            },
            "gamma": {
              "lb": 0.09563828590831737,
              "ub": 0.5
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 6.0,
              "ub": 6.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000)) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6))))) & (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000)) & (beta < 2599163341680227/6250000000000000)) & disj41) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (S_8 < 0.0)) | (beta < 14987921311940747/50000000000000000)) | (gamma < 9563828590831737/100000000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6)))))) | (! (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000))) | (! (beta < 2599163341680227/6250000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj41))) & (((I_8 < 0.0) | conj71) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj71))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (S_8 < 0.0))) & (! (beta < 14987921311940747/50000000000000000))) & (! (gamma < 9563828590831737/100000000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.3395243198714071,
                "gamma": 0.16377588188857223,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 1.0,
                "R_0": 0.0,
                "I_1": 0.011723531947841209,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9866387092332731,
                "R_1": 0.0016377588188857223,
                "timer_t_1": 1.0,
                "I_2": 0.0137307407501438,
                "assume_I_bound_2": 1.0,
                "S_2": 0.982711463869374,
                "R_2": 0.0035577953804822667,
                "timer_t_2": 2.0,
                "I_3": 0.016063299204113382,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9781301284774964,
                "R_3": 0.005806572318390335,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9727954975451966,
                "R_4": 0.008437378990683296,
                "timer_t_4": 4.0,
                "I_4": 0.01876712346412014,
                "S_6": 0.9603983021314473,
                "R_6": 0.01458467562222818,
                "timer_t_6": 6.0,
                "I_6": 0.02501702224632457,
                "assume_I_bound_6": 1.0,
                "I_8": 0.03313769787219889,
                "assume_I_bound_8": 1.0,
                "S_8": 0.9440830371224092,
                "R_8": 0.02277926500539198,
                "timer_t_8": 8.0,
                "timestep": 6.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.29975842623881493,
              "ub": 0.4158661346688363
            },
            "gamma": {
              "lb": 0.09563828590831737,
              "ub": 0.5
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 7.0,
              "ub": 7.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000)) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6))))) & (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000)) & disj41) & (gamma < 21412277890169543/50000000000000000)) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (S_8 < 0.0)) | (beta < 2599163341680227/6250000000000000)) | (gamma < 22522084988502753/100000000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6)))))) | (! (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000))) | (! (gamma < 21412277890169543/50000000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj41))) & (((I_8 < 0.0) | conj71) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj71))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (S_8 < 0.0))) & (! (beta < 2599163341680227/6250000000000000))) & (! (gamma < 22522084988502753/100000000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.3228162093785879,
                "gamma": 0.2225384475132627,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 0.0,
                "R_0": 0.0,
                "I_1": 0.010970495997715393,
                "assume_I_bound_1": 1.0,
                "S_1": 0.986804119527152,
                "R_1": 0.002225384475132627,
                "timer_t_1": 1.0,
                "I_2": 0.012023860158415885,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9833093934406795,
                "R_2": 0.004666746400904673,
                "timer_t_2": 2.0,
                "I_3": 0.013164801383612453,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9794926684376848,
                "R_3": 0.00734253017870275,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9753299841721366,
                "R_4": 0.010272229802683573,
                "timer_t_4": 4.0,
                "I_4": 0.014397786025179934,
                "S_6": 0.9662635397538918,
                "R_6": 0.016680441765568273,
                "timer_t_6": 6.0,
                "I_6": 0.017056018480539975,
                "assume_I_bound_6": 1.0,
                "I_8": 0.020105206108552216,
                "assume_I_bound_8": 1.0,
                "S_8": 0.9556228977475929,
                "R_8": 0.024271896143854856,
                "timer_t_8": 8.0,
                "S_10": 0.9434909988609486,
                "I_10": 0.023746012257244552,
                "R_10": 0.03306092286578255,
                "timer_t_10": 10.0,
                "timestep": 7.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.4158661346688363,
              "ub": 0.46239109731396055
            },
            "gamma": {
              "lb": 0.10359154937486256,
              "ub": 0.22522084988502752
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 6.0,
              "ub": 6.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000)) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6))))) & (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000)) & (gamma < 22522084988502753/100000000000000000)) & (beta < 5779888716424507/12500000000000000)) & disj72) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (S_8 < 0.0)) | (beta < 2599163341680227/6250000000000000)) | (gamma < 10359154937486257/100000000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6)))))) | (! (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000))) | (! (gamma < 22522084988502753/100000000000000000))) | (! (beta < 5779888716424507/12500000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj72))) & (((I_8 < 0.0) | conj148) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj148))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (S_8 < 0.0))) & (! (beta < 2599163341680227/6250000000000000))) & (! (gamma < 10359154937486257/100000000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.43257424516165555,
                "gamma": 0.12092062759465928,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 1.0,
                "R_0": 0.0,
                "I_1": 0.013073278751153798,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9857175149728996,
                "R_1": 0.0012092062759465928,
                "timer_t_1": 1.0,
                "I_2": 0.017066843560014276,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9801431163147397,
                "R_2": 0.0027900401252460333,
                "timer_t_2": 2.0,
                "I_3": 0.022239190180431353,
                "assume_I_bound_3": 1.0,
                "S_3": 0.972907022620523,
                "R_3": 0.0048537871990457756,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9635475291404412,
                "R_4": 0.007542993274200017,
                "timer_t_4": 4.0,
                "I_4": 0.028909477585358903,
                "S_6": 0.9394481340936447,
                "R_6": 0.0145346091909683,
                "timer_t_6": 6.0,
                "I_6": 0.04601725671538712,
                "assume_I_bound_6": 1.0,
                "I_8": 0.07267090346493646,
                "assume_I_bound_8": 1.0,
                "S_8": 0.9018846463288297,
                "R_8": 0.025663768145305,
                "timer_t_8": 8.0,
                "S_10": 0.43257424516165555,
                "I_10": 0.43257424516165555,
                "R_10": 0.43257424516165555,
                "timer_t_10": 0.43257424516165555,
                "timestep": 6.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.4158661346688363,
              "ub": 0.46239109731396055
            },
            "gamma": {
              "lb": 0.10359154937486256,
              "ub": 0.22522084988502752
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 7.0,
              "ub": 7.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & assume_I_bound_8) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & disj73) & (beta < 24051694591130127/50000000000000000)) & (gamma < 33323487426340247/500000000000000000)) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (R_8 < 0.0)) | (beta < 5779888716424507/12500000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (I_8 < 10000000000000001/100000000000000000))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (beta < 24051694591130127/50000000000000000))) | (! (gamma < 33323487426340247/500000000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((I_8 < 10000000000000001/100000000000000000) | (! conj149))) & ((conj149 | (! assume_I_bound_8)) | (! disj73))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (beta < 5779888716424507/12500000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.4251055082966767,
                "gamma": 0.14176226967984376,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 1.0,
                "R_0": 0.0,
                "I_1": 0.012790921835338661,
                "assume_I_bound_1": 1.0,
                "S_1": 0.985791455467863,
                "R_1": 0.0014176226967984374,
                "timer_t_1": 1.0,
                "I_2": 0.01633788419799967,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9804312182165369,
                "R_2": 0.0032308975854635187,
                "timer_t_2": 2.0,
                "I_3": 0.0208312017118961,
                "assume_I_bound_3": 1.0,
                "S_3": 0.973621791587857,
                "R_3": 0.00554700670024697,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.964999894699737,
                "R_4": 0.008500114103425471,
                "timer_t_4": 4.0,
                "I_4": 0.026499991196837536,
                "S_6": 0.943257768326754,
                "R_6": 0.01601362207301423,
                "timer_t_6": 6.0,
                "I_6": 0.04072860960023181,
                "assume_I_bound_6": 1.0,
                "I_8": 0.0621779588443066,
                "assume_I_bound_8": 1.0,
                "S_8": 0.9104934873777351,
                "R_8": 0.02756146569084072,
                "timer_t_8": 8.0,
                "S_10": 0.8626466598542978,
                "I_10": 0.09239542524248777,
                "R_10": 0.045190716215888944,
                "timer_t_10": 10.0,
                "timestep": 7.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.4158661346688363,
              "ub": 0.46533820623882743
            },
            "gamma": {
              "lb": 0.42824555780339085,
              "ub": 0.5
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 6.0,
              "ub": 6.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & disj52) & (beta < 5816727577985343/12500000000000000)) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (beta < 2599163341680227/6250000000000000)) | (gamma < 21412277890169543/50000000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (beta < 5816727577985343/12500000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj52))) & (((I_8 < 0.0) | conj100) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj100))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (beta < 2599163341680227/6250000000000000))) & (! (gamma < 21412277890169543/50000000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.43257424516165555,
                "gamma": 0.45076413459564835,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 1.0,
                "R_0": 0.0,
                "I_1": 0.009774843681143907,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9857175149728996,
                "R_1": 0.004507641345956484,
                "timer_t_1": 1.0,
                "I_2": 0.00953664904769791,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9815495558756171,
                "R_2": 0.008913795076685058,
                "timer_t_2": 2.0,
                "I_3": 0.009287064655290554,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9775003472736334,
                "R_3": 0.013212588071075967,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9735733607504309,
                "R_4": 0.01739889387726427,
                "timer_t_4": 4.0,
                "I_4": 0.009027745372304857,
                "S_6": 0.9659692957633791,
                "R_6": 0.025537783430969987,
                "timer_t_6": 6.0,
                "I_6": 0.008575247487816033,
                "assume_I_bound_6": 1.0,
                "I_8": 0.008514593949147515,
                "assume_I_bound_8": 1.0,
                "S_8": 0.9586690266490205,
                "R_8": 0.03310326680850931,
                "timer_t_8": 8.0,
                "S_10": 0.43257424516165555,
                "I_10": 0.43257424516165555,
                "R_10": 0.43257424516165555,
                "timer_t_10": 0.43257424516165555,
                "timestep": 6.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.4158661346688363,
              "ub": 0.46533820623882743
            },
            "gamma": {
              "lb": 0.42824555780339085,
              "ub": 0.5
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 7.0,
              "ub": 7.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & disj52) & (beta < 5816727577985343/12500000000000000)) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (beta < 2599163341680227/6250000000000000)) | (gamma < 21412277890169543/50000000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (beta < 5816727577985343/12500000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj52))) & (((I_8 < 0.0) | conj100) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj100))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (beta < 2599163341680227/6250000000000000))) & (! (gamma < 21412277890169543/50000000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.4256907734732763,
                "gamma": 0.45076413459564835,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 0.0,
                "R_0": 0.0,
                "I_1": 0.009706697311428952,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9857856613426146,
                "R_1": 0.004507641345956484,
                "timer_t_1": 1.0,
                "I_2": 0.009404583380549699,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9817123394821357,
                "R_2": 0.008883077137314661,
                "timer_t_2": 2.0,
                "I_3": 0.009095565209295935,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9777820951900015,
                "R_3": 0.013122339600702628,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9739961923555314,
                "R_4": 0.017222324048985087,
                "timer_t_4": 4.0,
                "I_4": 0.008781483595483615,
                "S_6": 0.9667140900577672,
                "R_6": 0.02513920003433639,
                "timer_t_6": 6.0,
                "I_6": 0.008269841497984954,
                "assume_I_bound_6": 1.0,
                "I_8": 0.007982361354918928,
                "assume_I_bound_8": 1.0,
                "S_8": 0.9598147907681546,
                "R_8": 0.03240262629220051,
                "timer_t_8": 8.0,
                "S_10": 0.9534555241423941,
                "I_10": 0.007145117581472885,
                "R_10": 0.039599136691407036,
                "timer_t_10": 10.0,
                "timestep": 7.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.46239109731396055,
              "ub": 0.4769723692708081
            },
            "gamma": {
              "lb": 0.10219285469980804,
              "ub": 0.17072338026465742
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 6.0,
              "ub": 6.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & (((R_4 + I_4) + S_4) <= 10000100000000001/10000000000000000)) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000)) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6))))) & (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000)) & (gamma < 8536169013232871/50000000000000000)) & (beta < 47697236927080811/100000000000000000)) & disj97) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (S_8 < 0.0)) | (beta < 5779888716424507/12500000000000000)) | (gamma < 2043857093996161/20000000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (((R_4 + I_4) + S_4) <= 10000100000000001/10000000000000000))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6)))))) | (! (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000))) | (! (gamma < 8536169013232871/50000000000000000))) | (! (beta < 47697236927080811/100000000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj97))) & (((I_8 < 0.0) | conj215) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj215))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (S_8 < 0.0))) & (! (beta < 5779888716424507/12500000000000000))) & (! (gamma < 2043857093996161/20000000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.4698598341789395,
                "gamma": 0.12092062759465928,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 1.0,
                "R_0": 0.0,
                "I_1": 0.01344240608242491,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9853483876416285,
                "R_1": 0.0012092062759465928,
                "timer_t_1": 1.0,
                "I_2": 0.01804044831180145,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9791248764543928,
                "R_2": 0.002834675233805678,
                "timer_t_2": 2.0,
                "I_3": 0.024158520483574253,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9708253279600594,
                "R_3": 0.005016151556366396,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9598053432662673,
                "R_4": 0.007937445772346596,
                "timer_t_4": 4.0,
                "I_4": 0.032257210961386146,
                "S_6": 0.9307108907021648,
                "R_6": 0.015738690457301144,
                "timer_t_6": 6.0,
                "I_6": 0.05355041884053404,
                "assume_I_bound_6": 1.0,
                "I_8": 0.08791259122900055,
                "assume_I_bound_8": 1.0,
                "S_8": 0.8836400601175481,
                "R_8": 0.028689711899750836,
                "timer_t_8": 8.0,
                "S_10": 0.4698598341789395,
                "I_10": 0.4698598341789395,
                "R_10": 0.4698598341789395,
                "timer_t_10": 0.4698598341789395,
                "timestep": 6.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.46239109731396055,
              "ub": 0.4769723692708081
            },
            "gamma": {
              "lb": 0.10219285469980804,
              "ub": 0.17072338026465742
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 7.0,
              "ub": 7.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & (((R_4 + I_4) + S_4) <= 10000100000000001/10000000000000000)) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000)) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6))))) & (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000)) & (gamma < 8536169013232871/50000000000000000)) & (beta < 47697236927080811/100000000000000000)) & disj97) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (S_8 < 0.0)) | (beta < 5779888716424507/12500000000000000)) | (gamma < 2043857093996161/20000000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (((R_4 + I_4) + S_4) <= 10000100000000001/10000000000000000))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6)))))) | (! (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000))) | (! (gamma < 8536169013232871/50000000000000000))) | (! (beta < 47697236927080811/100000000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj97))) & (((I_8 < 0.0) | conj215) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj215))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (S_8 < 0.0))) & (! (beta < 5779888716424507/12500000000000000))) & (! (gamma < 2043857093996161/20000000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.4652867862499427,
                "gamma": 0.12369967511822041,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 0.0,
                "R_0": 0.0,
                "I_1": 0.013369342432692229,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9853936608161256,
                "R_1": 0.001236996751182204,
                "timer_t_1": 1.0,
                "I_2": 0.017845277598343267,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9792639375570164,
                "R_2": 0.0028907848446404713,
                "timer_t_2": 2.0,
                "I_3": 0.02376881938862548,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9711329267778765,
                "R_3": 0.005098253833497996,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9603928281078006,
                "R_4": 0.008038479642478733,
                "timer_t_4": 4.0,
                "I_4": 0.031568692249720746,
                "S_6": 0.9321792512272656,
                "R_6": 0.01584867283490707,
                "timer_t_6": 6.0,
                "I_6": 0.05197207593782733,
                "assume_I_bound_6": 1.0,
                "I_8": 0.08461757228482053,
                "assume_I_bound_8": 1.0,
                "S_8": 0.8869218823375735,
                "R_8": 0.028706847627624467,
                "timer_t_8": 8.0,
                "S_10": 0.8174100411896409,
                "I_10": 0.13319478315472935,
                "R_10": 0.0496414550632325,
                "timer_t_10": 10.0,
                "timestep": 7.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.01,
              "ub": 0.5
            },
            "gamma": {
              "lb": 0.01,
              "ub": 0.5
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "((((((((disj1 & (I_0 = I0)) & (I0 = 1/100)) & ((assume_I_bound_0 | neg) | (! disj1))) & ((conj0 | (I_0 < 0.0)) | (! (I_0 < 10000000000000001/100000000000000000)))) & ((((I_0 < 0.0) | (I_0 < 10000000000000001/100000000000000000)) | (! (I_0 = I0))) | (! (I0 = 1/100)))) & ((! neg) | (! conj0))) & (! assume_I_bound_0)) & (! (I_0 < 0.0)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.255,
                "gamma": 0.255,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 1.0,
                "R_0": 0.0,
                "timestep": 0.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.01,
              "ub": 0.5
            },
            "gamma": {
              "lb": 0.01,
              "ub": 0.5
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 1.0,
              "ub": 1.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & disj6) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (I_1 < 10000000000000001/100000000000000000)) | (R_1 < 0.0)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((assume_I_bound_1 | neg) | (! disj6))) & ((conj6 | (I_1 < 0.0)) | (! (I_1 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj6))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! assume_I_bound_1)) & (! (I_1 < 0.0))) & (! (R_1 < 0.0)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.4922079494662655,
                "gamma": 0.18601972212587742,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 1.0,
                "R_0": 0.0,
                "I_1": 0.013012661478457255,
                "assume_I_bound_1": 1.0,
                "S_1": 0.985127141300284,
                "R_1": 0.0018601972212587742,
                "timer_t_1": 1.0,
                "timestep": 1.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.01,
              "ub": 0.5
            },
            "gamma": {
              "lb": 0.01,
              "ub": 0.5
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 2.0,
              "ub": 2.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & disj11) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & ((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (I_2 < 10000000000000001/100000000000000000)) | (R_2 < 0.0)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((assume_I_bound_2 | neg) | (! disj11))) & ((conj14 | (I_2 < 0.0)) | (! (I_2 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj14))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! assume_I_bound_2)) & (! (I_2 < 0.0))) & (! (R_2 < 0.0)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.4922079494662655,
                "gamma": 0.18601972212587742,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 1.0,
                "R_0": 0.0,
                "I_1": 0.013012661478457255,
                "assume_I_bound_1": 1.0,
                "S_1": 0.985127141300284,
                "R_1": 0.0018601972212587742,
                "timer_t_1": 1.0,
                "I_2": 0.016901725513144516,
                "assume_I_bound_2": 1.0,
                "S_2": 0.978817460815266,
                "R_2": 0.0042808136715895015,
                "timer_t_2": 2.0,
                "timestep": 2.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.01,
              "ub": 0.5
            },
            "gamma": {
              "lb": 0.01,
              "ub": 0.5
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 3.0,
              "ub": 3.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & disj16) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (I_3 < 10000000000000001/100000000000000000)) | (R_3 < 0.0)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((assume_I_bound_3 | neg) | (! disj16))) & ((conj22 | (I_3 < 0.0)) | (! (I_3 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj22))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! assume_I_bound_3)) & (! (I_3 < 0.0))) & (! (R_3 < 0.0)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.4922079494662655,
                "gamma": 0.18601972212587742,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 1.0,
                "R_0": 0.0,
                "I_1": 0.013012661478457255,
                "assume_I_bound_1": 1.0,
                "S_1": 0.985127141300284,
                "R_1": 0.0018601972212587742,
                "timer_t_1": 1.0,
                "I_2": 0.016901725513144516,
                "assume_I_bound_2": 1.0,
                "S_2": 0.978817460815266,
                "R_2": 0.0042808136715895015,
                "timer_t_2": 2.0,
                "I_3": 0.02190061393434529,
                "assume_I_bound_3": 1.0,
                "S_3": 0.970674503909648,
                "R_3": 0.0074248821560067195,
                "timer_t_3": 3.0,
                "timestep": 3.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.01,
              "ub": 0.5
            },
            "gamma": {
              "lb": 0.01,
              "ub": 0.5
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 4.0,
              "ub": 4.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & disj21) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & ((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (I_4 < 10000000000000001/100000000000000000)) | (R_4 < 0.0)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((assume_I_bound_4 | neg) | (! disj21))) & ((conj30 | (I_4 < 0.0)) | (! (I_4 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj30))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! assume_I_bound_4)) & (! (I_4 < 0.0))) & (! (R_4 < 0.0)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.4922079494662655,
                "gamma": 0.18601972212587742,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 1.0,
                "R_0": 0.0,
                "I_1": 0.013012661478457255,
                "assume_I_bound_1": 1.0,
                "S_1": 0.985127141300284,
                "R_1": 0.0018601972212587742,
                "timer_t_1": 1.0,
                "I_2": 0.016901725513144516,
                "assume_I_bound_2": 1.0,
                "S_2": 0.978817460815266,
                "R_2": 0.0042808136715895015,
                "timer_t_2": 2.0,
                "I_3": 0.02190061393434529,
                "assume_I_bound_3": 1.0,
                "S_3": 0.970674503909648,
                "R_3": 0.0074248821560067195,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9602109339285977,
                "R_4": 0.011498860053959992,
                "timer_t_4": 4.0,
                "I_4": 0.028290206017442348,
                "timestep": 4.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.01,
              "ub": 0.5
            },
            "gamma": {
              "lb": 0.01,
              "ub": 0.5
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 5.0,
              "ub": 5.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & disj26) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (I_6 < 10000000000000001/100000000000000000)) | (R_6 < 0.0)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((assume_I_bound_6 | neg) | (! disj26))) & ((conj38 | (I_6 < 0.0)) | (! (I_6 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj38))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! assume_I_bound_6)) & (! (I_6 < 0.0))) & (! (R_6 < 0.0)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.10730890301136431,
                "gamma": 0.16377588188857223,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 1.0,
                "R_0": 0.0,
                "I_1": 0.009424599320926786,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9889376418601875,
                "R_1": 0.0016377588188857223,
                "timer_t_1": 1.0,
                "I_2": 0.008881232801715152,
                "assume_I_bound_2": 1.0,
                "S_2": 0.987937481536178,
                "R_2": 0.0031812856621069455,
                "timer_t_2": 2.0,
                "I_3": 0.008368240352409326,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9869959316805026,
                "R_3": 0.004635827967088191,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9861096048958692,
                "R_4": 0.006006361577064102,
                "timer_t_4": 4.0,
                "I_4": 0.007884033527066788,
                "S_6": 0.9844410016076218,
                "R_6": 0.008588843525834094,
                "timer_t_6": 6.0,
                "I_6": 0.006970154866544207,
                "assume_I_bound_6": 1.0,
                "timestep": 5.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.4158661346688363,
              "ub": 0.5
            },
            "gamma": {
              "lb": 0.22522084988502752,
              "ub": 0.42824555780339085
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 6.0,
              "ub": 6.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000)) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6))))) & (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000)) & disj41) & (gamma < 21412277890169543/50000000000000000)) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (S_8 < 0.0)) | (beta < 2599163341680227/6250000000000000)) | (gamma < 22522084988502753/100000000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (((R_6 + I_6) + S_6) <= 10000100000000001/10000000000000000))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6)))))) | (! (((R_8 + I_8) + S_8) <= 10000100000000001/10000000000000000))) | (! (gamma < 21412277890169543/50000000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj41))) & (((I_8 < 0.0) | conj71) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj71))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (S_8 < 0.0))) & (! (beta < 2599163341680227/6250000000000000))) & (! (gamma < 22522084988502753/100000000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.43257424516165555,
                "gamma": 0.36697661796509823,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 1.0,
                "R_0": 0.0,
                "I_1": 0.010612718847449408,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9857175149728996,
                "R_1": 0.003669766179650982,
                "timer_t_1": 1.0,
                "I_2": 0.011243320126457857,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9811922892458498,
                "R_2": 0.007564390627692421,
                "timer_t_2": 2.0,
                "I_3": 0.011889382609222126,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9764201775289161,
                "R_3": 0.011690439861861792,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9713983786843378,
                "R_4": 0.016053595097436393,
                "timer_t_4": 4.0,
                "I_4": 0.012548026218225847,
                "S_6": 0.9608528471449205,
                "R_6": 0.025263377689661304,
                "timer_t_6": 6.0,
                "I_6": 0.013883775165418267,
                "assume_I_bound_6": 1.0,
                "I_8": 0.015786982681261583,
                "assume_I_bound_8": 1.0,
                "S_8": 0.9491822938196814,
                "R_8": 0.03537770257192099,
                "timer_t_8": 8.0,
                "timestep": 6.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.4158661346688363,
              "ub": 0.5
            },
            "gamma": {
              "lb": 0.22522084988502752,
              "ub": 0.42824555780339085
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 7.0,
              "ub": 7.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & disj52) & (beta < 5816727577985343/12500000000000000)) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (beta < 2599163341680227/6250000000000000)) | (gamma < 21412277890169543/50000000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (beta < 5816727577985343/12500000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj52))) & (((I_8 < 0.0) | conj100) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj100))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (beta < 2599163341680227/6250000000000000))) & (! (gamma < 21412277890169543/50000000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.43257424516165555,
                "gamma": 0.2889357549979176,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 0.0,
                "R_0": 0.0,
                "I_1": 0.011393127477121213,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9857175149728996,
                "R_1": 0.002889357549979176,
                "timer_t_1": 1.0,
                "I_2": 0.012959229664494185,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9808595261181471,
                "R_2": 0.006181244217358714,
                "timer_t_2": 2.0,
                "I_3": 0.01471337563007648,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9753609817057998,
                "R_3": 0.009925642664123699,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9691531425884532,
                "R_4": 0.014176892531302904,
                "timer_t_4": 4.0,
                "I_4": 0.016669964880243894,
                "S_6": 0.9551759013522102,
                "R_6": 0.023810105651531913,
                "timer_t_6": 6.0,
                "I_6": 0.021013992996257794,
                "assume_I_bound_6": 1.0,
                "I_8": 0.02666540182583882,
                "assume_I_bound_8": 1.0,
                "S_8": 0.9377315829354902,
                "R_8": 0.03589256741630108,
                "timer_t_8": 8.0,
                "S_10": 0.9163559483795034,
                "I_10": 0.0326315589934876,
                "R_10": 0.05130198993194235,
                "timer_t_10": 10.0,
                "timestep": 7.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.46533820623882743,
              "ub": 0.5
            },
            "gamma": {
              "lb": 0.42824555780339085,
              "ub": 0.48046001502306646
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 6.0,
              "ub": 6.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & disj72) & (gamma < 24023000751153323/50000000000000000)) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (gamma < 21412277890169543/50000000000000000)) | (beta < 5816727577985343/12500000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (gamma < 24023000751153323/50000000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj72))) & (((I_8 < 0.0) | conj148) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj148))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (gamma < 21412277890169543/50000000000000000))) & (! (beta < 5816727577985343/12500000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.4994488031661695,
                "gamma": 0.47886506570285586,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 1.0,
                "R_0": 0.0,
                "I_1": 0.01015589249431652,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9850554568486549,
                "R_1": 0.0047886506570285585,
                "timer_t_1": 1.0,
                "I_2": 0.01028913476667001,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9800589076717494,
                "R_2": 0.00965195756158058,
                "timer_t_2": 2.0,
                "I_3": 0.010398448415859057,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9750224725573173,
                "R_3": 0.014579079026823644,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9699586670437308,
                "R_4": 0.019558565725766412,
                "timer_t_4": 4.0,
                "I_4": 0.010482767230502898,
                "S_6": 0.959801878478796,
                "R_6": 0.029598367601775404,
                "timer_t_6": 6.0,
                "I_6": 0.010567566612404447,
                "assume_I_bound_6": 1.0,
                "I_8": 0.00976911342705275,
                "assume_I_bound_8": 1.0,
                "S_8": 0.9498810888787093,
                "R_8": 0.039933388314596134,
                "timer_t_8": 8.0,
                "S_10": 0.4994488031661695,
                "I_10": 0.4994488031661695,
                "R_10": 0.4994488031661695,
                "timer_t_10": 0.4994488031661695,
                "timestep": 6.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "true",
          "bounds": {
            "beta": {
              "lb": 0.46533820623882743,
              "ub": 0.5
            },
            "gamma": {
              "lb": 0.42824555780339085,
              "ub": 0.48046001502306646
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 7.0,
              "ub": 7.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & (gamma < 9563828590831737/100000000000000000)) & (beta < 38665359162356161/100000000000000000)) & disj90) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (I_8 < 10000000000000001/100000000000000000)) | (R_8 < 0.0)) | (beta < 9210449781933547/25000000000000000)) | (gamma < 6567973640803743/250000000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (gamma < 9563828590831737/100000000000000000))) | (! (beta < 38665359162356161/100000000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((assume_I_bound_8 | neg) | (! disj90))) & (((I_8 < 0.0) | conj198) | (! (I_8 < 10000000000000001/100000000000000000)))) & ((! neg) | (! conj198))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! assume_I_bound_8)) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (beta < 9210449781933547/25000000000000000))) & (! (gamma < 6567973640803743/250000000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "true",
              "values": {
                "beta": 0.4992181235840394,
                "gamma": 0.4319751765486719,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 0.0,
                "R_0": 0.0,
                "I_1": 0.010622507657995271,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9850577405765181,
                "R_1": 0.004319751765486719,
                "timer_t_1": 1.0,
                "I_2": 0.011257558325477047,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9798340255100941,
                "R_2": 0.008908416164428846,
                "timer_t_2": 2.0,
                "I_3": 0.011901217417035377,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9743273664063763,
                "R_3": 0.013771416176588426,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9685385585710121,
                "R_4": 0.018912479472296996,
                "timer_t_4": 4.0,
                "I_4": 0.012548961956691009,
                "S_6": 0.9564032670174909,
                "R_6": 0.02975429691880488,
                "timer_t_6": 6.0,
                "I_6": 0.013945199465385562,
                "assume_I_bound_6": 1.0,
                "I_8": 0.01493904867539643,
                "assume_I_bound_8": 1.0,
                "S_8": 0.9428494172376644,
                "R_8": 0.04191456649337233,
                "timer_t_8": 8.0,
                "S_10": 0.929109581338002,
                "I_10": 0.01671569006247048,
                "R_10": 0.05452296719788651,
                "timer_t_10": 10.0,
                "timestep": 7.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        }
      ],
      "false_boxes": [
        {
          "label": "false",
          "bounds": {
            "beta": {
              "lb": 0.46239109731396055,
              "ub": 0.48103389182260253
            },
            "gamma": {
              "lb": 0.01,
              "ub": 0.0666469748526805
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 6.0,
              "ub": 7.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & assume_I_bound_8) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & disj73) & (beta < 24051694591130127/50000000000000000)) & (gamma < 33323487426340247/500000000000000000)) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (I_8 < 0.0)) | (R_8 < 0.0)) | (beta < 5779888716424507/12500000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (I_8 < 10000000000000001/100000000000000000))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (beta < 24051694591130127/50000000000000000))) | (! (gamma < 33323487426340247/500000000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((I_8 < 10000000000000001/100000000000000000) | (! conj149))) & ((conj149 | (! assume_I_bound_8)) | (! disj73))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (beta < 5779888716424507/12500000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "false",
              "values": {
                "beta": 0.46609336238069987,
                "gamma": 0.03893272966385303,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 0.0,
                "R_0": 0.0,
                "I_1": 0.014224996990930399,
                "assume_I_bound_1": 1.0,
                "S_1": 0.9853856757124311,
                "R_1": 0.0003893272966385303,
                "timer_t_1": 1.0,
                "I_2": 0.02020446013995746,
                "assume_I_bound_2": 1.0,
                "S_2": 0.978852389823097,
                "R_2": 0.0009431500369455461,
                "timer_t_2": 2.0,
                "I_3": 0.02863585966869526,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9696343615545832,
                "R_3": 0.0017297787767216245,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9566926358354967,
                "R_4": 0.0028446814996816146,
                "timer_t_4": 4.0,
                "I_4": 0.04046268266482171,
                "S_6": 0.9206072350311971,
                "R_6": 0.005995445528213681,
                "timer_t_6": 6.0,
                "I_6": 0.07339731944058915,
                "assume_I_bound_6": 1.0,
                "I_8": 0.13111714138412459,
                "assume_I_bound_8": 0.0,
                "S_8": 0.8573625623333875,
                "R_8": 0.011710874282075324,
                "timer_t_8": 8.0,
                "S_10": 0.46609336238069987,
                "I_10": 0.46609336238069987,
                "R_10": 0.46609336238069987,
                "timer_t_10": 0.46609336238069987,
                "timestep": 6.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        },
        {
          "label": "false",
          "bounds": {
            "beta": {
              "lb": 0.48103389182260253,
              "ub": 0.5
            },
            "gamma": {
              "lb": 0.01,
              "ub": 0.10219285469980804
            },
            "S0": {
              "lb": 0.99,
              "ub": 0.99,
              "closed_upper_bound": true
            },
            "I0": {
              "lb": 0.01,
              "ub": 0.01,
              "closed_upper_bound": true
            },
            "R0": {
              "lb": 0.0,
              "ub": 0.0,
              "closed_upper_bound": true
            },
            "timestep": {
              "lb": 6.0,
              "ub": 7.0,
              "closed_upper_bound": true
            }
          },
          "explanation": {
            "relevant_assumptions": [
              {
                "constraint": {
                  "name": "I_bound",
                  "timepoints": {
                    "lb": 0.0,
                    "ub": 9.0,
                    "closed_upper_bound": true
                  },
                  "variable": "I",
                  "interval": {
                    "lb": 0.0,
                    "ub": 0.1
                  }
                }
              }
            ],
            "expression": "((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((assume_I_bound_0 & disj2) & (R_0 = R0)) & (I_0 = I0)) & (S_0 = S0)) & (R0 = 0.0)) & (I0 = 1/100)) & (S0 = 98999999999999999/100000000000000000)) & (gamma < 1/2)) & (beta < 1/2)) & assume_I_bound_1) & disj7) & (R_1 = (R_0 + (I_0 * gamma)))) & (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma)))) & (S_1 = (S_0 - ((I_0 * S_0) * beta)))) & assume_I_bound_2) & disj12) & (R_2 = (R_1 + (gamma * I_1)))) & (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1)))) & (S_2 = (S_1 - ((beta * I_1) * S_1)))) & assume_I_bound_3) & disj17) & (R_3 = (R_2 + (gamma * I_2)))) & (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2)))) & (S_3 = (S_2 - ((beta * I_2) * S_2)))) & assume_I_bound_4) & disj22) & (R_4 = (R_3 + (gamma * I_3)))) & (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3)))) & (S_4 = (S_3 - ((beta * I_3) * S_3)))) & assume_I_bound_6) & disj27) & (R_6 = (R_4 + (2.0 * (gamma * I_4))))) & (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4)))))) & (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4))))) & assume_I_bound_8) & (R_8 = (R_6 + (2.0 * (gamma * I_6))))) & (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6)))))) & (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6))))) & (gamma < 2043857093996161/20000000000000000)) & disj73) & ((conj1 | (! assume_I_bound_0)) | (! disj2))) & (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((I_0 < 0.0) | (R_0 < 0.0)) | (S_0 < 0.0)) | (gamma < 1/100)) | (beta < 1/100)) | (I_1 < 0.0)) | (R_1 < 0.0)) | (S_1 < 0.0)) | (I_2 < 0.0)) | (R_2 < 0.0)) | (S_2 < 0.0)) | (I_3 < 0.0)) | (R_3 < 0.0)) | (S_3 < 0.0)) | (I_4 < 0.0)) | (R_4 < 0.0)) | (S_4 < 0.0)) | (((R_4 + I_4) + S_4) < 19999800000000001/20000000000000000)) | (I_6 < 0.0)) | (R_6 < 0.0)) | (S_6 < 0.0)) | (((R_6 + I_6) + S_6) < 19999800000000001/20000000000000000)) | (I_8 < 0.0)) | (R_8 < 0.0)) | (S_8 < 0.0)) | (((R_8 + I_8) + S_8) < 19999800000000001/20000000000000000)) | (beta < 24051694591130127/50000000000000000)) | (! (I_0 < 10000000000000001/100000000000000000))) | (! (R_0 = R0))) | (! (I_0 = I0))) | (! (S_0 = S0))) | (! (R0 = 0.0))) | (! (I0 = 1/100))) | (! (S0 = 98999999999999999/100000000000000000))) | (! (gamma < 1/2))) | (! (beta < 1/2))) | (! (I_1 < 10000000000000001/100000000000000000))) | (! (R_1 = (R_0 + (I_0 * gamma))))) | (! (I_1 = ((I_0 + ((I_0 * S_0) * beta)) - (I_0 * gamma))))) | (! (S_1 = (S_0 - ((I_0 * S_0) * beta))))) | (! (I_2 < 10000000000000001/100000000000000000))) | (! (R_2 = (R_1 + (gamma * I_1))))) | (! (I_2 = ((I_1 - (gamma * I_1)) + ((beta * I_1) * S_1))))) | (! (S_2 = (S_1 - ((beta * I_1) * S_1))))) | (! (I_3 < 10000000000000001/100000000000000000))) | (! (R_3 = (R_2 + (gamma * I_2))))) | (! (I_3 = ((I_2 - (gamma * I_2)) + ((beta * I_2) * S_2))))) | (! (S_3 = (S_2 - ((beta * I_2) * S_2))))) | (! (I_4 < 10000000000000001/100000000000000000))) | (! (R_4 = (R_3 + (gamma * I_3))))) | (! (I_4 = ((I_3 - (gamma * I_3)) + ((beta * I_3) * S_3))))) | (! (S_4 = (S_3 - ((beta * I_3) * S_3))))) | (! (I_6 < 10000000000000001/100000000000000000))) | (! (R_6 = (R_4 + (2.0 * (gamma * I_4)))))) | (! (I_6 = (I_4 + (2.0 * ((-1.0 * (gamma * I_4)) + ((beta * I_4) * S_4))))))) | (! (S_6 = (S_4 - (2.0 * ((beta * I_4) * S_4)))))) | (! (I_8 < 10000000000000001/100000000000000000))) | (! (R_8 = (R_6 + (2.0 * (gamma * I_6)))))) | (! (I_8 = (I_6 + (2.0 * ((-1.0 * (gamma * I_6)) + ((beta * I_6) * S_6))))))) | (! (S_8 = (S_6 - (2.0 * ((beta * I_6) * S_6)))))) | (! (gamma < 2043857093996161/20000000000000000)))) & ((I_0 < 10000000000000001/100000000000000000) | (! conj1))) & ((conj7 | (! assume_I_bound_1)) | (! disj7))) & ((I_1 < 10000000000000001/100000000000000000) | (! conj7))) & ((conj15 | (! assume_I_bound_2)) | (! disj12))) & ((I_2 < 10000000000000001/100000000000000000) | (! conj15))) & ((conj23 | (! assume_I_bound_3)) | (! disj17))) & ((I_3 < 10000000000000001/100000000000000000) | (! conj23))) & ((conj31 | (! assume_I_bound_4)) | (! disj22))) & ((I_4 < 10000000000000001/100000000000000000) | (! conj31))) & ((conj39 | (! assume_I_bound_6)) | (! disj27))) & ((I_6 < 10000000000000001/100000000000000000) | (! conj39))) & ((I_8 < 10000000000000001/100000000000000000) | (! conj149))) & ((conj149 | (! assume_I_bound_8)) | (! disj73))) & (! (I_0 < 0.0))) & (! (R_0 < 0.0))) & (! (S_0 < 0.0))) & (! (gamma < 1/100))) & (! (beta < 1/100))) & (! (I_1 < 0.0))) & (! (R_1 < 0.0))) & (! (S_1 < 0.0))) & (! (I_2 < 0.0))) & (! (R_2 < 0.0))) & (! (S_2 < 0.0))) & (! (I_3 < 0.0))) & (! (R_3 < 0.0))) & (! (S_3 < 0.0))) & (! (I_4 < 0.0))) & (! (R_4 < 0.0))) & (! (S_4 < 0.0))) & (! (((R_4 + I_4) + S_4) < 19999800000000001/20000000000000000))) & (! (I_6 < 0.0))) & (! (R_6 < 0.0))) & (! (S_6 < 0.0))) & (! (((R_6 + I_6) + S_6) < 19999800000000001/20000000000000000))) & (! (I_8 < 0.0))) & (! (R_8 < 0.0))) & (! (S_8 < 0.0))) & (! (((R_8 + I_8) + S_8) < 19999800000000001/20000000000000000))) & (! (beta < 24051694591130127/50000000000000000)))"
          },
          "schedule": {
            "timepoints": [
              0,
              1,
              2,
              3,
              4,
              6,
              8,
              10
            ]
          },
          "points": [
            {
              "label": "false",
              "values": {
                "beta": 0.4922079494662655,
                "gamma": 0.0834650818049568,
                "S0": 0.99,
                "I0": 0.01,
                "R0": 0.0,
                "timer_t_0": 0.0,
                "S_0": 0.99,
                "assume_I_bound_0": 1.0,
                "I_0": 0.01,
                "assume_I_bound": 0.0,
                "R_0": 0.0,
                "I_1": 0.01403820788166646,
                "assume_I_bound_1": 1.0,
                "S_1": 0.985127141300284,
                "R_1": 0.000834650818049568,
                "timer_t_1": 1.0,
                "I_2": 0.019673457961368462,
                "assume_I_bound_2": 1.0,
                "S_2": 0.9783201862733537,
                "R_2": 0.0020063557652778485,
                "timer_t_2": 2.0,
                "I_3": 0.027504908658506227,
                "assume_I_bound_3": 1.0,
                "S_3": 0.9688466745970696,
                "R_3": 0.0036484167444240678,
                "timer_t_3": 3.0,
                "assume_I_bound_4": 1.0,
                "S_4": 0.9557302653524118,
                "R_4": 0.005944147842812718,
                "timer_t_4": 4.0,
                "I_4": 0.03832558680477542,
                "S_6": 0.9196720374182114,
                "R_6": 0.01234196961328286,
                "timer_t_6": 6.0,
                "I_6": 0.06799995701123634,
                "assume_I_bound_6": 1.0,
                "I_8": 0.11871290789809148,
                "assume_I_bound_8": 0.0,
                "S_8": 0.857823720287312,
                "R_8": 0.023693209246950835,
                "timer_t_8": 8.0,
                "timestep": 6.0
              },
              "schedule": {
                "timepoints": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  8,
                  10
                ]
              }
            }
          ]
        }
      ]
    }
  }
